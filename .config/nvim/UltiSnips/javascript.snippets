snippet co
const ${1} = ${2};
endsnippet

snippet re
require('${2}')
endsnippet

snippet as "async arrow func" i
async (${1}) => {
	${2}
}
endsnippet

snippet => "arrow func" i
(${1}) => {
	${2}
}
endsnippet

snippet de
describe('${1}', () => {
	${2}
})
endsnippet

snippet it
it('should ${1}', ${2})
endsnippet

snippet mo
module.exports = {
	${1},
}
endsnippet

snippet if
if (${1}) {
	${2}
} ${3}
endsnippet

snippet el
else {
	${1}
}
endsnippet

snippet tr
try {
	${1}
} catch (e) {
	${2}
}
endsnippet

snippet sw
switch (${1}) {
	case ${2}:
		${3}
		break;
	default:
		${4}
}
endsnippet

